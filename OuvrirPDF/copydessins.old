# -*- coding: utf-8 -*-
import os, winshell, re
from shutil import copy2
import famillelist

currentfolder = os.path.dirname(os.path.abspath(__file__))
exec(compile(source=open(currentfolder + '\\famillelist.py').read(), filename='famillelist.py', mode='exec'))

drawing_dir = u"S:\\---ETI---NOMENCLATURE (NM)- PLANS D\'ENSSEMBLE (PE)-PLANS DE D\u00C9FINITIONS (X...)\\PLANS DE DEFINITION (X__-XXXX)\\PDF\\"
#print drawing_dir


def getFamille(texte):
	return famillelist[texte[:3]]

def getRevision(part):
	famille = getFamille(part)
	#print getFamille(part)
	filelist = []
	fichier = ""
	#print os.path.isdir((drawing_dir + famille + "\\" + part)).
	#print drawing_dir + famille + "\\" + part
	if os.path.isdir((drawing_dir + famille + "\\" + part)):
		for filename in os.listdir((drawing_dir + famille + "\\" + part)):
			if filename.startswith(part): 
				#print(os.path.join(directory, filename))
				#print filename
				filelist.append(filename)
				continue
			else:
				continue
		print filelist
		#print max(filelist)
		log.write(str(filelist))
		log.write('\n')
		correction = max(filelist).split('_')
		correction = '_'.join(correction[:2]), '_'.join(correction[2:])
		fichier = correction[0]
		if fichier[-3:].upper() != 'PDF':
			fichier = fichier + '.PDF'
		#print fichier
		log.write(str(fichier))
		log.write('\n')
		return fichier
	else:
		log.write(str("ERREUR - DOSSIER INEXSISTANT: " + (famille + "\\" + part)))
		log.write('\n')
		return False

	
def getPartsList():
	with open('partslist.txt') as f:
		content = f.readlines()
		#foo = re.match(r'[aA-zZ]\d{2}-\d{4}', content)
		#print foo
		# you may also want to remove whitespace characters like `\n` at the end of each line
		content = [x.strip() for x in content]
		return content
	

partslist = getPartsList()
#print partslist
with open("log.txt", "w") as log:			
	for part in partslist:
		revision = getRevision(part)
		if(revision):
			famille = getFamille(part)
			#currentfolder = os.path.dirname(os.path.abspath(__file__))
			if part:
		#		os.startfile((drawing_dir + famille + "\\" + part))
				cible=drawing_dir + famille + "\\" + part + "\\" + revision
				if os.path.isfile(cible):
					copy2(cible, currentfolder)
					#print cible
					#winshell.CreateShortcut (Path=os.path.join (currentfolder, revision+'.lnk'),Target=cible)
				else:
					print part + " n'existe pas!"
					print drawing_dir + famille + "\\" + part + "\\" + revision
					log.write(str("ERREUR - " + part + " n'existe pas!"))
					log.write('\n')
#raw_input("Appuyez sur une touche pour quitter")